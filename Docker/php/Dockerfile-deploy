# See https://github.com/docker-library/php/blob/master/7.1/fpm/Dockerfile
FROM php:7.2-fpm

ARG TIMEZONE
ARG COMPOSER_CONSUMER_KEY
ARG COMPOSER_SECRET_KEY
RUN if [ -z ${TIMEZONE+x} ]; then TIMEZONE=UTC; else echo "timezone will be set as: '$TIMEZONE'"; fi

# add new relic agent
# check licence key, will only be passed if prod is being built
RUN if [ -z ${NR_LICENCE_KEY+x} ]; then echo "NewRelic agent disabled"; else \
    curl -L https://download.newrelic.com/php_agent/release/newrelic-php5-8.3.0.226-linux.tar.gz | tar -C /tmp -zx && \
     NR_INSTALL_USE_CP_NOT_LN=1 NR_INSTALL_SILENT=1 /tmp/newrelic-php5-*/newrelic-install install && \
       rm -rf /tmp/newrelic-php5-* /tmp/nrinstall* && \
         sed -i -e 's/"REPLACE_WITH_REAL_KEY"/'"$NR_LICENCE_KEY"'/' \
      -e 's/newrelic.appname = "PHP Application"/newrelic.appname = '"$STACK_NAME"'/' \
          /usr/local/etc/php/conf.d/newrelic.ini; fi

# opcache enable
RUN docker-php-ext-configure opcache --enable-opcache && docker-php-ext-install opcache
# Copy configuration
RUN echo "opcache.enable_cli=1" >> /usr/local/etc/php/conf.d/opcache.ini
RUN echo "opcache.enable=1" >> /usr/local/etc/php/conf.d/opcache.ini
RUN echo "opcache.validate_timestamps=0" >> /usr/local/etc/php/conf.d/opcache.ini
RUN echo "opcache.max_accelerated_files=20000" >> /usr/local/etc/php/conf.d/opcache.ini
RUN echo "opcache.memory_consumption=256" >> /usr/local/etc/php/conf.d/opcache.ini
RUN echo "opcache.interned_strings_buffer=16" >> /usr/local/etc/php/conf.d/opcache.ini
RUN echo "realpath_cache_size=4096K" >> /usr/local/etc/php/conf.d/opcache.ini
RUN echo "realpath_cache_ttl=600" >> /usr/local/etc/php/conf.d/opcache.ini

# issues with php-soap on php 7 fpm
RUN rm /etc/apt/preferences.d/no-debian-php

# install necessary ubuntu libraries
RUN apt-get update && apt-get install -y --no-install-recommends \
    openssl \
    git \
    zlib1g-dev \
    libxml2-dev \
    php-soap \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN docker-php-ext-install zip
RUN docker-php-ext-install soap

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
RUN composer --version

# Set timezone
RUN ln -snf "/usr/share/zoneinfo/${TIMEZONE}" /etc/localtime && echo "${TIMEZONE}" > /etc/timezone
RUN printf '[PHP]\ndate.timezone = "%s"\n', "${TIMEZONE}" > /usr/local/etc/php/conf.d/tzone.ini
RUN date

# Type docker-php-ext-install to see available extensions
RUN docker-php-ext-install pdo pdo_mysql

WORKDIR /var/www/html
COPY . /var/www/html/

RUN echo "{\"bitbucket-oauth\": {\"bitbucket.org\": {\"consumer-key\": \"${COMPOSER_CONSUMER_KEY}\",\"consumer-secret\": \"${COMPOSER_SECRET_KEY}\"}}}" >> /root/.composer/auth.json

RUN composer install --optimize-autoloader && php /var/www/html/bin/console cache:warmup

CMD ["sh", "-c", "php /var/www/html/bin/console doctrine:migrations:migrate -n && chmod -R a+w /var/www/html/var/cache/ && php-fpm"]
